---
$id: tlpobj.schema.json
$schema: http://json-schema.org/draft-07/schema#
title: TLPOBJ
description: >-
  JSON object with key/values according to the underlying structure
  with a few exception (docfiles and docfiledata are merged).

  https://tug.org/svn/texlive/trunk/Master/tlpkg/doc/json-formats.txt?revision=56458&view=markup#l9
type: object
properties:
  name: { type: string, examples: ["12many"] }
  shortdesc:
    $comment: The value of `null` is UNDOCUMENTED.
    type: [string, "null"]
  longdesc:
    $comment: The value of `null` is UNDOCUMENTED.
    type: [string , "null"]
  category: { $ref: "#/$defs/Category" }
  catalogue:
    $comment: The value of `null` is UNDOCUMENTED.
    type: [string , "null"]
  containerchecksum: { type: string }
  srccontainerchecksum: { type: string }
  doccontainerchecksum: { type: string }
  revision: { type: integer, examples: [12345] }
  runsize: { type: integer }
  docsize: { type: integer }
  srcsize: { type: integer }
  containersize: { type: integer }
  srccontainersize: { type: integer }
  doccontainersize: { type: integer }
  relocated: { type: boolean, examples: [false] }
  runfiles:
    type: array
    items: { type: string }
    examples:
      - ["texmf-dist/...", "texmf-dist/...file2"]
  srcfiles: { type: array, items: { type: string } }
  executes: { type: array, items: { type: string } }
  depends: { type: array, items: { type: string } }
  postactions: { type: array, items: { type: string } }
  docfiles:
    type: array
    items:
      type: object
      properties:
        file: { type: string }
        language: { type: string }
        details: { type: string }
      required: [file]
      additionalProperties: false
    examples:
      - [
          { "file": "docfile1", "language": "en" },
          { "file": "docfile2", "details": "readme file" }
        ]
  binfiles:
    description: >-
      Keys are architecture names,
      values are arrays of strings (list of binfiles).
    type: object
    patternProperties:
      "^.*$": { type: array, items: { type: string } }
    examples:
      - {
          "x86_64-linux": ["binfile1", "binfile2", "..."],
          "win32": ["binfile3"]
        }
  binsize:
    description: Keys are architecture names, values are numbers.
    type: object
    patternProperties:
      "^.*$": { type: integer }
    examples:
      - { "x86_64-linux": 1233, "win32": 333 }
  cataloguedata:
    type: object
    properties:
      topics: { type: string }
      version: { type: string }
      license: { type: string }
      ctan: { type: string }
      date: { type: string }
      related: { type: string }
      alias:
        description: UNDOCUMENTED.
        type: string
      also:
        description: UNDOCUMENTED.
        type: string
      contact-announce:
        description: UNDOCUMENTED.
        type: string
      contact-bugs:
        description: UNDOCUMENTED.
        type: string
      contact-development:
        description: UNDOCUMENTED.
        type: string
      contact-home:
        description: UNDOCUMENTED.
        type: string
      contact-repository:
        description: UNDOCUMENTED.
        type: string
      contact-support:
        description: UNDOCUMENTED.
        type: string
    additionalProperties: false
    examples:
      - { "topics": "graphic", "version": "1.23" }
required: [name, category, revision]
additionalProperties: false
examples:
  - {
      "name": "minimal",
      "category": "Package",
      "revision": 12345
    }
$defs:
  Category:
    title: Category
    description: |-
      Identifies the category into which this package belongs.

      https://www.tug.org/texlive/doc/tlpkgdoc/TLPSRC.html#category
    type: string
    enum: [Collection, Scheme, TLCore, Package, ConTeXt]
---
$id: tlpobj-info.schema.json
$schema: http://json-schema.org/draft-07/schema#
title: TLPOBJINFO
description: |-
  This JSON format is dumped on `tlmgr info --data json`.

  https://tug.org/svn/texlive/trunk/Master/tlpkg/doc/json-formats.txt?revision=56458&view=markup#l53
type: object
properties:
  name: { $ref: tlpobj.schema.json#/properties/name }
  shortdesc: { $ref: tlpobj.schema.json#/properties/shortdesc }
  longdesc: { $ref: tlpobj.schema.json#/properties/longdesc }
  category: { $ref: tlpobj.schema.json#/properties/category }
  catalogue: { $ref: tlpobj.schema.json#/properties/catalogue }
  containerchecksum: { $ref: tlpobj.schema.json#/properties/containerchecksum }
  srccontainerchecksum: { $ref: tlpobj.schema.json#/properties/srccontainerchecksum }
  doccontainerchecksum: { $ref: tlpobj.schema.json#/properties/doccontainerchecksum }
  runsize: { $ref: tlpobj.schema.json#/properties/runsize }
  docsize: { $ref: tlpobj.schema.json#/properties/docsize }
  srcsize: { $ref: tlpobj.schema.json#/properties/srcsize }
  containersize: { $ref: tlpobj.schema.json#/properties/containersize }
  srccontainersize: { $ref: tlpobj.schema.json#/properties/srccontainersize }
  doccontainersize: { $ref: tlpobj.schema.json#/properties/doccontainersize }
  relocated: { $ref: tlpobj.schema.json#/properties/relocated }
  runfiles: { $ref: tlpobj.schema.json#/properties/runfiles }
  srcfiles: { $ref: tlpobj.schema.json#/properties/srcfiles }
  executes: { $ref: tlpobj.schema.json#/properties/executes }
  depends: { $ref: tlpobj.schema.json#/properties/depends }
  postactions: { $ref: tlpobj.schema.json#/properties/postactions }
  docfiles: { $ref: tlpobj.schema.json#/properties/docfiles }
  binfiles: { $ref: tlpobj.schema.json#/properties/binfiles }
  binsize: { $ref: tlpobj.schema.json#/properties/binsize }
  cataloguedata: { $ref: tlpobj.schema.json#/properties/cataloguedata }
  lrev:
    description: Local revision of the package.
    type: integer
  rrev:
    description: Remote revision of the package.
    type: integer
  available:
    description: Available at repository.
    type: boolean
  installed: { type: boolean }
  rcataloguedata:
    $ref: tlpobj.schema.json#/properties/cataloguedata
    description: Catalogue data on the remote side.
required: [name, category]
additionalProperties: false
---
$id: tlpdb-single.schema.json
$schema: http://json-schema.org/draft-07/schema#
title: TLPDBSINGLE
description: >-
  https://tug.org/svn/texlive/trunk/Master/tlpkg/doc/json-formats.txt?revision=56458&view=markup#l65
type: object
properties:
  options: { type: array, items: { $ref: tloption.schema.json# } }
  settings: { type: array, items: { $ref: tlsetting.schema.json# } }
  configs:
    type: object
    properties:
      container_split_src_files: { type: boolean }
      container_split_doc_files: { type: boolean }
      container_format: { type: string }
      minrelease: { type: string }
      release: { type: string }
    additionalProperties: false
  tlpkgs:
    type: array
    items: { $ref: tlpobj.schema.json# }
additionalProperties: false
---
$id: tlpdb.schema.json
$schema: http://json-schema.org/draft-07/schema#
title: TLPDB
description: >-
  This format is used when dumping tlpdb,
  local or remote JSON object with the following fields:
  keys are tags, values are tlpdb in TLPDBSINGLE format.

  https://tug.org/svn/texlive/trunk/Master/tlpkg/doc/json-formats.txt?revision=56458&view=markup#l78
type: object
patternProperties:
  "^.*$": { $ref: tlpdb-single.schema.json# }
examples:
  - {
      "main": {
        "options": [],
        "tlpkgs": []
      },
      "tlcontrib": {
        "options": [],
        "tlpkgs": []
      }
    }
---
$id: tlbackup.schema.json
$schema: http://json-schema.org/draft-07/schema#
title: TLBACKUP
description: >-
  This format is used when dumping available backups
  via the tlmgr restore action.
  JSON array of JSON objects, one per available backup.

  https://tug.org/svn/texlive/trunk/Master/tlpkg/doc/json-formats.txt?revision=56458&view=markup#l95
type: array
items:
  type: object
  properties:
    name: { type: string }
    rev: { type: string }
    date: { type: string }
  additionalProperties: false
examples:
  - [
      {
        "date": "2017-10-30 11:04",
        "name": "uplatex",
        "rev": "45414"
      },
      {
        "date": "2017-09-28 10:50",
        "name": "uplatex",
        "rev": "45141"
      }
    ]
---
$id: tlpaper.schema.json
$schema: http://json-schema.org/draft-07/schema#
title: TLPAPER
description: >-
  https://tug.org/svn/texlive/trunk/Master/tlpkg/doc/json-formats.txt?revision=56458&view=markup#l116
type: array
items:
  type: object
  properties:
    program:
      description: Gives the program name.
      type: string
    file:
      description: The place where the configuration has been found.
      type: string
    options:
      description: >-
        An array of strings with first one being the currently selected paper.
      type: array
      items: { type: string }
  additionalProperties: false
examples:
  - [
      {
        "options": [
          "a4",
          "letter"
        ],
        "file": "/usr/local/texlive/2017/texmf-config/tex/generic/config/pdftexconfig.tex",
        "program": "pdftex"
      }
    ]
---
$id: tloption.schema.json
$schema: http://json-schema.org/draft-07/schema#
title: TLOPTION
description: >-
  https://tug.org/svn/texlive/trunk/Master/tlpkg/doc/json-formats.txt?revision=56458&view=markup#l133
type: object
properties:
  name: { type: string }
  tlmgrname: { type: string }
  description: { type: string }
  format: { type: string }
  default: { type: string }
  value: { type: string }
required: [name, tlmgrname, description, format, default]
additionalProperties: false
examples:
  - {
      "format": "b",
      "description": "Install source files",
      "tlmgrname": "srcfiles",
      "value": "1",
      "default": "1",
      "name": "install_srcfiles"
    }
---
$id: tlsetting.schema.json
$schema: http://json-schema.org/draft-07/schema#
title: TLSETTING
description: >-
  https://tug.org/svn/texlive/trunk/Master/tlpkg/doc/json-formats.txt?revision=56458&view=markup#l133
type: object
properties:
  name: { type: string }
  description: { type: string }
  type:
    description: UNDOCUMENTED.
    type: string
  value: { type: string }
required: [name, description]
additionalProperties: false
examples:
  - {
      "type" :"b",
      "description": "This tree acts as user tree",
      "name": "usertree"
    }
